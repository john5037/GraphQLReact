{"version":3,"sources":["db.js","Query.js","RepoInfo.js","SearchBox.js","NavButton.js","App.js","index.js"],"names":["github","baseURL","username","headers","Authorization","githubQuery","pageCount","queryString","paginationKeyword","paginationString","query","RepoInfo","repo","className","href","url","name","description","viewerSubscription","style","fontSize","id","toString","SearchBox","totalCount","onTotalChange","onQueryChange","htmlFor","type","value","onChange","event","target","min","max","NavButtons","start","end","next","previous","onPage","onClick","App","useState","userName","setUserName","repoList","setRepoList","setPageCount","setQueryString","setTotalCount","startCursor","setStartCursor","endCursor","setEndCursor","hasPreviousPage","setHasPreviousPage","hasNextPage","setHasNextPage","setPaginationKeyword","setPaginationString","fetchData","useCallback","queryText","JSON","stringify","fetch","method","body","then","response","json","data","viewer","repos","search","edges","total","repositoryCount","pageInfo","prev","catch","err","console","log","useEffect","myNumber","myString","NavButton","myKeyword","map","node","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.712ee7f1.chunk.js","sourcesContent":["const github = {\r\n  baseURL: \"https://api.github.com/graphql\",\r\n  username:\"john5037\",\r\n\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization:\"bearer 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\"\r\n  }\r\n}\r\n\r\nexport default github;","const githubQuery = (pageCount,queryString, paginationKeyword, paginationString) =>  {\r\n  return {\r\n    query: `\r\n     {\r\n  viewer {\r\n    name\r\n  }\r\n  search(query: \"${queryString} user:john5037 sort:updated:desc\", type: REPOSITORY, ${paginationKeyword}: ${pageCount}, ${paginationString}) {\r\n    repositoryCount\r\n    edges {\r\n      cursor\r\n      node {\r\n      ... on Repository {\r\n        name\r\n        description\r\n        id\r\n        url\r\n      }\r\n    }\r\n    }\r\n    pageInfo {\r\n      startCursor\r\n      endCursor\r\n      hasNextPage\r\n      hasPreviousPage\r\n    }\r\n  }\r\n}\r\n`,\r\n  };\r\n};\r\n\r\nexport default githubQuery;","const RepoInfo = ({repo}) => {\r\n  return (\r\n                  <li className=\"list-group-item\" key={repo.id.toString()}>\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <div className=\"d-flex flex-column\">       \r\n                        <a href={repo.url} className=\"h5 mb-0 text-decoration-none\">\r\n                          {repo.name}</a>\r\n                        <p className=\"small\">{repo.description}</p>  \r\n                        </div>\r\n                      <span className={\r\n                        \"px-1 py-1 ms-1 d-inline-block btn btn-sm \"+\r\n                          (repo.viewerSubscription === \"SUBSCRIBED\" ? \"btn-success\" : \"btn-outline-secondary\")\r\n                        } style={{fontSize:\"0.6em\" }}>\r\n                        {repo.viewerSubscription}\r\n                      </span>\r\n                    </div>\r\n                  </li>\r\n  )\r\n}\r\nexport default RepoInfo;","const SearchBox =  ({totalCount,pageCount,queryString,onTotalChange,onQueryChange}) => {\r\n  return (\r\n    <div className=\"d-flex align-items-center bg-light px-3 py-2 small rounded-3\">\r\n      <div className=\"d-flex align-items-center flex-grow-1\">\r\n        <label htmlFor=\"queryString\" className=\"me-2 fw-bold text-secondary\">\r\n          Search\r\n        </label>\r\n        <input\r\n          id=\"queryString\"\r\n          className=\"form-control form-control-sm me-2\"\r\n          type=\"text\"\r\n          value={queryString}\r\n          onChange={(event)=> {onQueryChange(event.target.value)}}\r\n        />\r\n      </div>\r\n      <div className=\"d-flex align-items-center\">\r\n        <label htmlFor=\"pageCount\" className=\"me-2 fw-bold text-secondary\">\r\n          Show\r\n        </label>\r\n        <input\r\n          id=\"pageCount\"\r\n          className=\"form-control form-control-sm text-center me-2\"\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max=\"100\"\r\n          value={pageCount}\r\n          onChange={(event)=> {onTotalChange(event.target.value)}}\r\n        />\r\n      </div>\r\n      <div>\r\n        <b className=\"me-2 text-secondary\">Total:</b>\r\n        {totalCount}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\nexport default SearchBox;","const NavButtons = ({start,end,next,previous,onPage}) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center my-2\">\r\n      {previous && (\r\n        <button className=\"btn mx-1 btn-sm btn-primary bi bi-arrow-left\" onClick={()=> onPage(\"last\",'before: \"'+ start + '\"')}></button>\r\n      )}\r\n      {next && (\r\n        <button className=\"btn mx-1 btn-sm btn-primary bi bi-arrow-right\" onClick={()=> onPage(\"first\",'after: \"'+ end + '\"')}></button>\r\n      )}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavButtons;","import github from \"./db.js\";\nimport {useEffect,useState,useCallback} from \"react\";\nimport query from './Query';\nimport RepoInfo from './RepoInfo';\nimport SearchBox from './SearchBox';\nimport NavButtons from './NavButton';\n\nfunction App() {\n  let [userName, setUserName] = useState(\"\");\n  let [repoList, setRepoList]  = useState(null);\n  let [pageCount,setPageCount] = useState(10);\n  let [queryString, setQueryString] = useState(\"test\");\n  let [totalCount, setTotalCount] = useState(null);\n  \n  let [startCursor, setStartCursor] = useState(null);\n  let [endCursor, setEndCursor] = useState(null);\n  let [hasPreviousPage, setHasPreviousPage] = useState(false);\n  let [hasNextPage, setHasNextPage] = useState(true);\n  let [paginationKeyword, setPaginationKeyword] = useState(\"first\");\n  let [paginationString, setPaginationString] = useState(\" \");\n  \n  const fetchData = useCallback(() => { \n    const queryText = JSON.stringify(query(pageCount,queryString, paginationKeyword, paginationString));\n\n    fetch(github.baseURL, {\n      method:\"POST\",\n      headers: github.headers,\n      body: queryText\n    })\n    .then(response => response.json())\n    .then(data => {\n      const viewer = data.data.viewer;\n      const repos = data.data.search.edges;\n      const total = data.data.search.repositoryCount;\n\n      const start = data.data.search.pageInfo?.startCursor;\n      const end   = data.data.search.pageInfo?.endCursor;\n      const next  = data.data.search.pageInfo?.hasNextPage;\n      const prev  = data.data.search.pageInfo?.hasPreviousPage;\n      \n\n      setUserName(viewer.name);\n      setRepoList(repos);\n      setTotalCount(total);\n\n      setStartCursor(start);\n      setEndCursor(end);\n      setHasNextPage(next);\n      setHasPreviousPage(prev);\n      \n    })\n    .catch(err => {\n      console.log(err);\n    })\n  },[pageCount,queryString,paginationString,paginationKeyword]);\n  \n  useEffect(() => {\n    fetchData();\n  },[fetchData]);\n  return (\n    <div className=\"App container mt-5\">\n        <h1 className=\"text-primary\">\n          <i className=\"bi bi-diagram-2-fill\"></i>\n          Repository\n        </h1>\n        <p>Hey  {userName}</p>\n        <SearchBox  \n          totalCount={totalCount} \n          pageCount={pageCount} \n          queryString={queryString}\n          onTotalChange={(myNumber) => {\n            setPageCount(myNumber);\n          }} \n          onQueryChange={(myString)=>{setQueryString(myString)}}\n        />\n        <NavButtons \n          start={startCursor}\n          end={endCursor}\n          next={hasNextPage}\n          previous={hasPreviousPage}\n          onPage={ (myKeyword, myString) => {\n            setPaginationKeyword(myKeyword);\n            setPaginationString(myString);\n          }}\n        />\n        { repoList && (\n            <ul className=\"list-group list-group-flush\">\n              { repoList.map((repo) => (\n                  <RepoInfo key={repo.node.id} repo={repo.node}></RepoInfo>\n              ))\n              }\n            </ul>\n          )\n        }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './custom.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}